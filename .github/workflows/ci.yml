#https://github.com/marketplace/actions/setup-php-action
name: "CI Tests"
on: [push, pull_request]
jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
          DB_HOST: 127.0.0.1
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick,fileinfo, iconv,intl, zip, mysql
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Install front-end dependencies
        run: |
          npm install
          npm run build

      - name: Clear Config
        run: php artisan config:clear

      - name: üç∫ Laravel Pint - Lint check
        run: composer test:pint

      - name: üó≥Ô∏è Migrate MySQL DB
        env: 
          DB_CONNECTION: mysql
          DB_DATABASE: laravel
          DB_USER: root
          DB_PASSWORD: password
        run: php artisan migrate:fresh --seed

      - name: üß´ Pest - Unit & Feature Tests
        run: composer test

        env:
          DB_CONNECTION: mysql
          DB_DATABASE: laravel
          DB_USER: root
          DB_PASSWORD: password
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          RUNNING_IN_CI: true

